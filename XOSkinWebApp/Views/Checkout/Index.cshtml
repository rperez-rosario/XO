@model CheckoutViewModel

@{
  ViewData["Title"] = "Checkout";
}

<div class="text-center">
  <h1 class="display-4">Place Your <br />Order</h1>
  @Html.Raw(ViewData["Checkout.WelcomeText"])
</div>
@if (Model.LineItem.Count == 0)
{
<br />
<div class="text-center">
  @Html.Raw("Your shopping cart is currently empty. Go <a href=/TopSellers />add some items</a>.")
</div>
}
else
{
<br />
<form asp-action="PlaceOrder" id="PlaceOrder" aria-hidden="true">
  <div class="container-fluid">
    <div class="row" style="width: 100%; margin-left: auto; margin-right: auto">
      <div asp-validation-summary="ModelOnly" class="text-danger"></div>
      <div class="col-sm-4">
        <h4>Billing Address</h4>
        <span class="text-danger" id="val-billing-address"></span>
        <div class="form-group">
          <label class="control-label">Name on Credit Card</label>
          <input asp-for="BillingName" class="form-control" id="billing-name" maxlength="100" />
          <span asp-validation-for="BillingName" class="text-danger" id="val-billing-name"></span>
        </div>
        <div class="form-group">
          <label class="control-label">Address Line 1</label>
          <input asp-for="BillingAddress1" class="form-control" id="billing-address1" />
          <span asp-validation-for="BillingAddress1" class="text-danger" id="val-billing-address1"></span>
        </div>
        <div class="form-group">
          <label class="control-label">Address Line 2</label>
          <input asp-for="BillingAddress2" class="form-control" id="billing-address2" />
          <span asp-validation-for="BillingAddress2" class="text-danger" id="val-billing-address2"></span>
        </div>
        <div class="form-group">
          <label class="control-label">City</label>
          <input asp-for="BillingCity" class="form-control" id="billing-city" maxlength="100" />
          <span asp-validation-for="BillingCity" class="text-danger" id="val-billing-city"></span>
        </div>
        <div class="form-group">
          <label class="control-label">State</label>
          <select asp-for="BillingState" class="form-control" asp-items="ViewBag.State" id="billing-state"></select>
        </div>
        <div class="form-group">
          <label class="control-label">Country</label>
          <select asp-for="BillingCountry" class="form-control" asp-items="ViewBag.Country" id="billing-country"></select>
        </div>
        <div class="form-group">
          <label class="control-label">Postal Code</label>
          <input asp-for="BillingPostalCode" class="form-control" id='billing-postal-code' maxlength="10" />
          <span asp-validation-for="BillingPostalCode" class="text-danger" id="val-billing-postal-code"></span>
        </div>
      </div>
      <div class="col-sm-4" style="padding-left: 10px; padding-right: 10px">
        <h4>Shipping Address, Same? <input asp-for="ShippingAddressSame" id="same-address" type="checkbox" /></h4>
        <span class="text-danger" id="val-shipping-address"></span>
        <div class="form-group">
          <label class="control-label">Recipient's Name</label>
          <input asp-for="ShippingName" class="form-control" id="shipping-name" maxlength="100" />
          <span asp-validation-for="ShippingName" class="text-danger" id="val-shipping-name"></span>
        </div>
        <div class="form-group">
          <label class="control-label">Address Line 1</label>
          <input asp-for="ShippingAddress1" class="form-control" id="shipping-address1" />
          <span asp-validation-for="ShippingAddress1" class="text-danger" id="val-shipping-address1"></span>
        </div>
        <div class="form-group">
          <label class="control-label">Address Line 2</label>
          <input asp-for="ShippingAddress2" class="form-control" id="shipping-address2" />
          <span asp-validation-for="ShippingAddress2" class="text-danger"></span>
        </div>
        <div class="form-group">
          <label class="control-label">City</label>
          <input asp-for="ShippingCity" class="form-control" id="shipping-city" maxlength="100" />
          <span asp-validation-for="ShippingCity" class="text-danger" id="val-shipping-city"></span>
        </div>
        <div class="form-group">
          <label class="control-label">State</label>
          <select asp-for="ShippingState" class="form-control" asp-items="ViewBag.State" id="shipping-state"></select>
        </div>
        <div class="form-group">
          <label class="control-label">Country</label>
          <select asp-for="ShippingCountry" class="form-control" asp-items="ViewBag.Country" id="shipping-country"></select>
        </div>
        <div class="form-group">
          <label class="control-label">Postal Code</label>
          <input asp-for="ShippingPostalCode" class="form-control" id="shipping-postal-code" maxlength="10" />
          <span asp-validation-for="ShippingPostalCode" class="text-danger" id="val-shipping-postal-code"></span>
        </div>
      </div>
      <div class="col-sm-4">
        <div hidden="@(!Model.CalculatedShippingAndTaxes)">
          <h4>Credit Card</h4>
          <div asp-validation-summary="ModelOnly" class="text-danger"></div>
          <div class="form-group">
            <label class="control-label">Credit Card Number</label>
            <input asp-for="CreditCardNumber" class="form-control" type="password" id="credit-card-number" maxlength="19"
                   onkeypress="return restrictAlphabets(event)" />
            <span asp-validation-for="CreditCardNumber" class="text-danger" id="val-credit-card-number"></span>
          </div>
          <div class="form-group">
            <label class="control-label">CVC</label>
            <input asp-for="CreditCardCVC" class="form-control" type="password" id="credit-card-cvc" maxlength="4"
                   onkeypress="return restrictAlphabets(event)" />
            <span asp-validation-for="CreditCardCVC" class="text-danger" id="val-credit-card-cvc"></span>
          </div>
          <div class="form-group">
            <label class="control-label">Expiration Month and Year</label>
            <input asp-for="CreditCardExpirationDate" class="form-control" type="Month" id="credit-card-expiration-date" />
            <span class="text-danger" id="val-credit-card-expiration"></span>
          </div>
        </div>
        <div style="font-weight: bold">
          <label class="control-label">Type-in a Discount Code</label>
          <input asp-for="DiscountCode" class="form-control" id="discount-code"
            style="font-weight: bolder; max-width: 305px; text-transform: uppercase" maxlength="256" />
        </div>
        <div style="font-weight: bold">
          <label class="control-label">Or Pick a Discount Coupon</label>
          <select asp-for="DiscountCouponId" class="form-control" asp-items="ViewBag.DiscountCoupon" 
            id="discount-coupon-id" style="font-weight: bolder; max-width: 305px"></select>
        </div>
        <br />
        <div style="text-align: right; margin-right: 25px">
          <span style="font-weight: bold">
            Carrier:  @Html.Raw(Model.CarrierName)
          </span>
        </div>
        <div style="text-align: right; margin-right: 25px">
          <span style="font-weight: bold">Shipping:</span>
          @Html.Raw(Model.ShippedOn.ToShortDateString())
        </div>
        <div style="text-align: right; margin-right: 25px">
          <span style="font-weight: bold">Arrival:</span>
          @Html.Raw(Model.ExpectedToArrive.ToShortDateString())
        </div>
        <br />
        <div style="text-align: right; margin-right: 25px">
          <span style="font-weight: bold">Sub-Total:</span>
          $@Html.Raw(String.Format("{0:0.00}", Model.SubTotal))
        </div>
        <div style="text-align: right; margin-right: 25px">
          <span style="font-weight: bold">Taxes:</span>
          +$@Html.Raw(String.Format("{0:0.00}", Model.Taxes))
        </div>
        <div style="text-align: right; margin-right: 25px">
          <span style="font-weight: bold">USPS Priority Mail:</span>
          +$@Html.Raw(String.Format("{0:0.00}", Model.ShippingCharges))
        </div>
        <div style="text-align: right; margin-right: 25px">
          <span style="font-weight: bold">Code Discount:</span>
          -$@Html.Raw(String.Format("{0:0.00}", Model.CodeDiscount))
        </div>
        <div style="text-align: right; margin-right: 25px">
          <span style="font-weight: bold">Coupon Discount:</span>
          -$@Html.Raw(String.Format("{0:0.00}", Model.CouponDiscount))
        </div>
        <div style="font-weight: bold; text-align: right; margin-right: 25px">
          Total: $@Html.Raw(String.Format("{0:0.00}", Model.Total))
        </div>
        <br />
        <div style="text-align: right; margin-right: ">
          <input id="calculate-shipping-cost-and-taxes-button" type="submit"
                 formaction=@Url.Action("CalculateShippingCostAndTaxes")
                 value="Calculate Shipping, Discounts & Taxes" class="btn-outline-dark btn"
                 hidden="@(Model.CalculatedShippingAndTaxes)" />
          <input id="change-address-button" type="submit" formaction=@Url.Action("Index") value="Change Address"
                 class="btn-outline-dark btn" hidden="@(!Model.CalculatedShippingAndTaxes)" />
          <input id="place-order-button" type="submit" formaction=@Url.Action("PlaceOrder") value="Place Order"
                 class="btn-outline-dark btn" hidden="@(!Model.CalculatedShippingAndTaxes)">
          &nbsp;<span class="spinner spinner-border spinner-border-sm" id="spinner" role="status" hidden"></span>
        </div>
      </div>
    </div>
  </div>
  <h4>Items in Your Order</h4>
  <table class="table table-responsive" id="ShoppingCart" style="margin-left: auto; margin-right: auto">
    <thead>
      <tr>
        <th></th>
        <th class="text-nowrap">Product Name</th>
        <th>Description</th>
        <th>Quantity</th>
        <th class="text-nowrap">Sub-Total</th>
      </tr>
    </thead>
    <tbody>
      @foreach (ShoppingCartLineItemViewModel lineItem in Model.LineItem)
      {
        <tr>
          <td><img src="@lineItem.ImageSource" style="height: 100px; display: inline; float: left" /></td>
          <td style="font-weight: bold">@Html.DisplayFor(modelItem => lineItem.ProductName)</td>
          <td>@Html.DisplayFor(modelItem => lineItem.ProductDescription)</td>
          <td style="width: 170px">
            <div style="display: inline; float: left">
              @lineItem.Quantity
            </div>
          </td>
          <td>@Html.DisplayFor(modelItem => lineItem.Total)</td>
        </tr>
      }
    </tbody>
  </table>
  <input type="hidden" asp-for="OrderId" value="@Model.OrderId" />
  <input type="hidden" asp-for="SubTotal" value="@Model.SubTotal.ToString()" />
  <input type="hidden" asp-for="Taxes" value="@Model.Taxes.ToString()" />
  <input type="hidden" asp-for="ShippingCharges" value="@Model.ShippingCharges.ToString()" />
  <input type="hidden" asp-for="Total" value="@Model.Total.ToString()" />
  <input type="hidden" asp-for="CodeDiscount" value="@Model.CodeDiscount.ToString()" />
  <input type="hidden" asp-for="CouponDiscount" value="@Model.CouponDiscount.ToString()" />
  <input type="hidden" asp-for="ExpectedToArrive" value="@Model.ExpectedToArrive" />
  <input type="hidden" asp-for="ShippingCarrier" value="@Model.ShippingCarrier" />
  <input type="hidden" asp-for="CarrierName" value="@Model.CarrierName" />
  <input type="hidden" asp-for="CalculatedShippingAndTaxes" value="@Model.CalculatedShippingAndTaxes" 
    id="calculated-shipping" />
  <input type="hidden" asp-for="TotalWeightInPounds" value="@Model.TotalWeightInPounds" />
  <input type="hidden" asp-for="ShippedOn" value="@Model.ShippedOn" />
  <input type="hidden" asp-for="CardDeclined" value="@Model.CardDeclined" id="card-declined" />
  <input type="hidden" asp-for="ShippingAddressDeclined" value="@Model.ShippingAddressDeclined" 
    id="shipping-address-declined" />
  <input type="hidden" asp-for="TaxCalculationServiceOffline" value="@Model.TaxCalculationServiceOffline"
    id="tax-calculation-service-offline" />
  <input type="hidden" asp-for="ShipEngineShipmentId" value="@Model.ShipEngineShipmentId" />
  <input type="hidden" asp-for="ShipEngineRateId" value="@Model.ShipEngineRateId" />
</form>
<script type="text/javascript">
  $(document).ready(function () {
    var table = $('#ShoppingCart').DataTable({
      paging: false,
      searching: false,
      sort: false,
      bInfo: false
    });

    new $.fn.dataTable.Responsive(table, {
      details: true
    });

    $('#discount-coupon-id').change(function () {
      if ($('#discount-coupon-id').val() > 0) {
        $('#discount-code').val('');
        $('#discount-code').attr('disabled', true);
      } else {
        $('#discount-code').attr('disabled', false);
      }
    });

    if ($('#tax-calculation-service-offline').val() == 'True') {
      if ($('#same-address').prop('checked')) {
        $('#val-billing-address').html('The tax calculation service is temporarily offline. ' +
          'Please try placing your order again in a few minutes or contact us.');
      }
      else {
        $('#val-shipping-address').html('The tax calculation service is temporarily offline. ' +
          'Please try placing your order again in a few minutes or contact us.');
      }
    }
    
    if ($('#shipping-address-declined').val() == 'True') {
      if ($('#same-address').prop('checked')) {
        $('#val-billing-address').html('The address provided does not exist in our database. ' +
          'Please correct it or enter a different address.');
      }
      else {
        $('#val-shipping-address').html('The address provided does not exist in our database. ' +
          'Please correct it or enter a different address.');
      }
    }

    if ($('#card-declined').val() == 'True') {
      $('#val-credit-card-number').html('Credit card transaction declined.<br />Please try another credit card number.');
    }

    if ($('#calculated-shipping').val() == 'True') {
      $('#billing-name').attr('readonly', true);
      $('#billing-address1').attr('readonly', true);
      $('#billing-address2').attr('readonly', true);
      $('#billing-city').attr('readonly', true);
      $('#billing-state').attr('disabled', true);
      $('#billing-country').attr('disabled', true);
      $('#billing-postal-code').attr('readonly', true);
      $('#shipping-name').attr('readonly', true);
      $('#shipping-address1').attr('readonly', true);
      $('#shipping-address2').attr('readonly', true);
      $('#shipping-city').attr('readonly', true);
      $('#shipping-state').attr('disabled', true);
      $('#shipping-country').attr('disabled', true);
      $('#shipping-postal-code').attr('readonly', true);
      $('#same-address').attr('disabled', true);
      $('#discount-code').attr('readonly', true);
      $('#discount-coupon-id').attr('disabled', true);
    }

    $('#val-billing-name').html('');
    $('#val-billing-address1').html('');
    $('#val-billing-city').html('');
    $('#val-billing-postal-code').html('');

    if ($('#same-address').prop('checked')) {
      shippingAddressSame();
    }

    document.addEventListener('submit', function (e) {
      switch ($(e.submitter).prop('id')) {
        case 'calculate-shipping-cost-and-taxes-button':
          if (validateShippingAddress(e) == true) {
            $('body').addClass('calculating-shipping');
            $('calculate-shipping-cost-and-taxes-button').attr('disabled', true);
            $('#billing-name').attr('readonly', true);
            $('#billing-address1').attr('readonly', true);
            $('#billing-address2').attr('readonly', true);
            $('#billing-city').attr('readonly', true);
            $('#billing-state').attr('disabled', false);
            $('#billing-state').attr('readonly', true);
            $('#billing-country').attr('disabled', false);
            $('#billing-country').attr('readonly', true);
            $('#billing-postal-code').attr('readonly', true);
            $('#shipping-name').attr('readonly', true);
            $('#shipping-address1').attr('readonly', true);
            $('#shipping-address2').attr('readonly', true);
            $('#shipping-city').attr('readonly', true);
            $('#shipping-state').attr('disabled', false);
            $('#shipping-state').attr('readonly', true);
            $('#shipping-country').attr('disabled', false);
            $('#shipping-country').attr('readonly', true);
            $('#shipping-postal-code').attr('readonly', true);
            $('#same-address').attr('disabled', false);
            $('#same-address').attr('readonly', true);
            $('#shipping-address-declined').val(false);
            $('#tax-calculation-service-offline').val(false);
            $('#discount-coupon-id').attr('disabled', false);
            $('#discount-coupon-id').attr('readonly', true);
          } else {
            e.preventDefault();
          }
          break;
        case 'change-address-button':
          $('body').addClass('changing-address');
          $('#change-address-button').attr('disabled', true);
          $('#val-credit-card-number').html('');
          $('#val-credit-card-cvc').html('');
          $('#val-credit-card-expiration').html('');
          $('#card-declined').val(false);
          $('#shipping-address-declined').val(false);
          $('#tax-calculation-service-offline').val(false);
          $('#same-address').attr('disabled', false);
          $('#same-address').attr('readonly', true);
          $('#shipping-state').attr('disabled', false);
          $('#shipping-state').attr('readonly', true);
          $('#shipping-country').attr('disabled', false);
          $('#shipping-country').attr('readonly', true);
          $('#billing-state').attr('disabled', false);
          $('#billing-state').attr('readonly', true);
          $('#billing-country').attr('disabled', false);
          $('#billing-country').attr('readonly', true);
          $('#calculated-shipping').val(false);
          $('#discount-coupon-id').attr('disabled', false);
          $('#discount-coupon-id').attr('readonly', true);
          $('#discount-code').attr('disabled', false);
          $('#discount-code').attr('readonly', true);
          break;
        case 'place-order-button':
          if (validateShippingAddress(e) == true && validateCreditCardInformation(e) == true) {
            $('body').addClass('placing-order');
            $('#place-order-button').attr('disabled', true);
            $('#change-address-button').attr('disabled', true);
            $('#shipping-state').attr('disabled', false);
            $('#shipping-state').attr('readonly', true);
            $('#shipping-country').attr('disabled', false);
            $('#shipping-country').attr('readonly', true);
            $('#billing-state').attr('disabled', false);
            $('#billing-state').attr('readonly', true);
            $('#billing-country').attr('disabled', false);
            $('#billing-country').attr('readonly', true);
            $('#same-address').attr('disabled', false);
            $('#same-address').attr('readonly', true);
            $('#card-declined').val(false);
            $('#shipping-address-declined').val(false);
            $('#tax-calculation-service-offline').val(false);
            $('#credit-card-number').attr('readonly', true);
            $('#credit-card-cvc').attr('readonly', true);
            $('#credit-card-expiration-date').attr('readonly', true);
            $('#discount-coupon-id').attr('disabled', false);
            $('#discount-coupon-id').attr('readonly', true);
            $('#discount-code').attr('disabled', false);
            $('#discount-code').attr('readonly', true);
          } else {
            e.preventDefault();
          }
        default:
      }
    });

    $('#same-address').change(function () {
      shippingAddressSame();
    });

    function shippingAddressSame() {
      if ($('#same-address').prop('checked')) {
        $('#shipping-name').val('');
        $('#shipping-address1').val('');
        $('#shipping-address2').val('');
        $('#shipping-city').val('');
        $('#shipping-state').val('');
        $('#shipping-country').val('');
        $('#shipping-postal-code').val('');
        $('#shipping-name').attr('readonly', true);
        $('#shipping-address1').attr('readonly', true);
        $('#shipping-address2').attr('readonly', true);
        $('#shipping-city').attr('readonly', true);
        $('#shipping-state').attr('disabled', true);
        $('#shipping-country').attr('disabled', true);
        $('#shipping-postal-code').attr('readonly', true);
        $('#val-shipping-name').html('');
        $('#val-shipping-address1').html('');
        $('#val-shipping-city').html('');
        $('#val-shipping-state').val(0);
        $('#val-shipping-country').val(0);
        $('#val-shipping-postal-code').html('');
      } else {
        $('#shipping-name').attr('readonly', false);
        $('#shipping-address1').attr('readonly', false);
        $('#shipping-address2').attr('readonly', false);
        $('#shipping-city').attr('readonly', false);
        $('#shipping-state').attr('disabled', false);
        $('#shipping-country').attr('disabled', false);
        $('#shipping-postal-code').attr('readonly', false);
      }
    }

    function validateShippingAddress(e) {
      if (!$('#same-address').prop('checked')) {
        if ($('#shipping-name').val().trim() == '') {
          $('#val-shipping-name').html("Recipient's name required.");
          return false;
        }
        if ($('#shipping-address1').val().trim() == '') {
          $('#val-shipping-address1').html('Shipping address line 1 required.');
          return false;
        }
        if ($('#shipping-city').val().trim() == '') {
          $('#val-shipping-city').html('Shipping city name required.');
          return false;
        }
        if ($('#shipping-state').val() == 0) {
          $('#val-shipping-state').html('Shipping state required.');
          return false;
        }
        if ($('#shipping-country').val() == 0) {
          $('#val-shipping-country').html('Shipping oountry required.');
          return false;
        }
        if ($('#shipping-postal-code').val().trim() == '') {
          $('#val-shipping-postal-code').html('Shipping postal code required.');
          return false;
        }
      }
      return true;
    }

    function validateCreditCardInformation(e) {
      if (creditCardNumberFilled() == false) {
        return false;
      }
      if (creditCardCVCFilled() == false) {
        return false;
      }
      return true;
    }

    $('#credit-card-number').keyup(function () {
      creditCardNumberFilled();
    });

    $('#credit-card-cvc').keyup(function () {
      creditCardCVCFilled();
    });

    $('#shipping-name').keyup(function () {
      if (!$('#same-address').prop('checked')) {
        shippingNameFilled();
      }
    });

    $('#shipping-address1').keyup(function () {
      if (!$('#same-address').prop('checked')) {
        shippingAddress1Filled();
      }
    });

    $('shipping-city').keyup(function () {
      if (!$('#same-address').prop('checked')) {
        shippingCityFilled();
      }
    });

    $('#shipping-postal-code').keyup(function () {
      if (!$('#same-address').prop('checked')) {
        shippingPostalCodeFilled();
      }
    });

    function creditCardNumberFilled() {
      if ($('#credit-card-number').val().trim() != '') {
        $('#val-credit-card-number').html('');
        return true;
      } else {
        $('#val-credit-card-number').html('Credit card number is required.');
        return false;
      }
    }

    function creditCardCVCFilled() {
      if ($('#credit-card-cvc').val().trim() != '') {
        $('#val-credit-card-cvc').html('');
        return true;
      } else {
        $('#val-credit-card-cvc').html('Credit card CVC is required.');
        return false;
      }
    }

    function shippingNameFilled() {
      if ($('#shipping-name').val().trim() != '') {
        $('#val-shipping-name').html('');
      } else {
        $('#val-shipping-name').html("Recipient's name required.");
      }
    }

    function shippingAddress1Filled() {
      if ($('#shipping-address1').val().trim() != '') {
        $('#val-shipping-address1').html('');
      } else {
        $('#val-shipping-address1').html('Shipping address line 1 required.');
      }
    }

    function shippingCityFilled() {
      if ($('#shipping-city').val().trim() != '') {
        $('#val-shipping-city').html('');
      } else {
        $('#val-shipping-city').html('Shipping city name required.');
      }
    }

    function shippingPostalCodeFilled() {
      if ($('#shipping-postal-code').val().trim() != '') {
        $('#val-shipping-postal-code').html('');
      } else {
        $('#val-shipping-postal-code').html('Shipping postal code required.');
      }
    }

    $('#billing-postal-code').inputmask("99999[-9999]", { greedy: false });
    $('#shipping-postal-code').inputmask("99999[-9999]", { greedy: false });
  });

  function restrictAlphabets(e) {
    var x = e.which || e.keycode;
    if ((x >= 48 && x <= 57))
      return true;
    else
      return false;
  }
</script>
}
@section Scripts {
  @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
